/*
 * Copyright 2015-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.poc.restfulpoc.data;

import com.poc.restfulpoc.AbstractRestFulPOCApplicationTest;
import com.poc.restfulpoc.jooq.tables.Address;
import com.poc.restfulpoc.jooq.tables.Customer;
import com.poc.restfulpoc.jooq.tables.records.CustomerRecord;
import com.poc.restfulpoc.repository.CustomerRepository;
import org.jooq.DSLContext;
import org.jooq.Record2;
import org.jooq.Result;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import org.springframework.beans.factory.annotation.Autowired;

import static com.poc.restfulpoc.jooq.tables.Address.ADDRESS;
import static com.poc.restfulpoc.jooq.tables.Customer.CUSTOMER;
import static org.junit.jupiter.api.Assertions.assertEquals;

class JooqQueryTest extends AbstractRestFulPOCApplicationTest {

	@Autowired
	private DSLContext create;

	@Autowired
	private CustomerRepository customerRepository;

	@Autowired
	private DataBuilder dataBuilder;

	@BeforeEach
	public void setUp() throws Exception {
		this.customerRepository.deleteAll();
		this.dataBuilder.run();
	}

	@Test
	public void testJoin() throws Exception {
		// All of these tables were generated by jOOQ's Maven plugin
		Customer c = CUSTOMER.as("c");
		Address a = ADDRESS.as("a");

		Result<Record2<String, String>> result = this.create
				.select(c.FIRST_NAME, c.LAST_NAME).from(c).join(a)
				.on(a.CUSTOMER_ID.eq(c.ID)).orderBy(c.FIRST_NAME.desc()).fetch();

		assertEquals(3, result.size());
		assertEquals("Steve", result.getValue(0, c.FIRST_NAME));
		assertEquals("Raja", result.getValue(1, c.FIRST_NAME));
		assertEquals("Paul", result.getValue(2, c.FIRST_NAME));

		assertEquals("Toale", result.getValue(0, c.LAST_NAME));
		assertEquals("Kolli", result.getValue(1, c.LAST_NAME));
		assertEquals("Jones", result.getValue(2, c.LAST_NAME));
	}

	@Test
	public void testActiveRecords() throws Exception {
		Result<CustomerRecord> result = this.create.selectFrom(CUSTOMER)
				.orderBy(CUSTOMER.ID).fetch();

		assertEquals(3, result.size());
	}

}
