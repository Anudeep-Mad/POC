/*
 * This file is generated by jOOQ.
*/
package com.poc.restfulpoc.jooq.tables;


import com.poc.restfulpoc.jooq.Indexes;
import com.poc.restfulpoc.jooq.Keys;
import com.poc.restfulpoc.jooq.Public;
import com.poc.restfulpoc.jooq.tables.records.OrdersRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Orders extends TableImpl<OrdersRecord> {

    private static final long serialVersionUID = 1058194815;

    /**
     * The reference instance of <code>PUBLIC.ORDERS</code>
     */
    public static final Orders ORDERS = new Orders();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrdersRecord> getRecordType() {
        return OrdersRecord.class;
    }

    /**
     * The column <code>PUBLIC.ORDERS.ORDER_ID</code>.
     */
    public final TableField<OrdersRecord, Long> ORDER_ID = createField("ORDER_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.ORDERS.CREATED_ON</code>.
     */
    public final TableField<OrdersRecord, Timestamp> CREATED_ON = createField("CREATED_ON", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>PUBLIC.ORDERS.ORDER_NUMBER</code>.
     */
    public final TableField<OrdersRecord, String> ORDER_NUMBER = createField("ORDER_NUMBER", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.ORDERS.STATUS</code>.
     */
    public final TableField<OrdersRecord, String> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>PUBLIC.ORDERS.CUSTOMER_ID</code>.
     */
    public final TableField<OrdersRecord, Long> CUSTOMER_ID = createField("CUSTOMER_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>PUBLIC.ORDERS</code> table reference
     */
    public Orders() {
        this(DSL.name("ORDERS"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.ORDERS</code> table reference
     */
    public Orders(String alias) {
        this(DSL.name(alias), ORDERS);
    }

    /**
     * Create an aliased <code>PUBLIC.ORDERS</code> table reference
     */
    public Orders(Name alias) {
        this(alias, ORDERS);
    }

    private Orders(Name alias, Table<OrdersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Orders(Name alias, Table<OrdersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FKBHAWAVFSVMODCHTKO734A1YTI_INDEX_8, Indexes.PRIMARY_KEY_8, Indexes.UK_NTHKIU7PGMNQNU86I2JYOE2V7_INDEX_8);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrdersRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_8;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrdersRecord>> getKeys() {
        return Arrays.<UniqueKey<OrdersRecord>>asList(Keys.CONSTRAINT_8, Keys.UK_NTHKIU7PGMNQNU86I2JYOE2V7);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OrdersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OrdersRecord, ?>>asList(Keys.FKBHAWAVFSVMODCHTKO734A1YTI);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Orders as(String alias) {
        return new Orders(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Orders as(Name alias) {
        return new Orders(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Orders rename(String name) {
        return new Orders(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Orders rename(Name name) {
        return new Orders(name, null);
    }
}
