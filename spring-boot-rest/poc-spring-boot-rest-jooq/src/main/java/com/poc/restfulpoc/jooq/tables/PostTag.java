/*
 * This file is generated by jOOQ.
*/
package com.poc.restfulpoc.jooq.tables;


import com.poc.restfulpoc.jooq.Indexes;
import com.poc.restfulpoc.jooq.Keys;
import com.poc.restfulpoc.jooq.Public;
import com.poc.restfulpoc.jooq.tables.records.PostTagRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostTag extends TableImpl<PostTagRecord> {

    private static final long serialVersionUID = 498255976;

    /**
     * The reference instance of <code>PUBLIC.POST_TAG</code>
     */
    public static final PostTag POST_TAG = new PostTag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PostTagRecord> getRecordType() {
        return PostTagRecord.class;
    }

    /**
     * The column <code>PUBLIC.POST_TAG.POST_ID</code>.
     */
    public final TableField<PostTagRecord, Long> POST_ID = createField("POST_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.POST_TAG.TAG_ID</code>.
     */
    public final TableField<PostTagRecord, Long> TAG_ID = createField("TAG_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.POST_TAG</code> table reference
     */
    public PostTag() {
        this(DSL.name("POST_TAG"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.POST_TAG</code> table reference
     */
    public PostTag(String alias) {
        this(DSL.name(alias), POST_TAG);
    }

    /**
     * Create an aliased <code>PUBLIC.POST_TAG</code> table reference
     */
    public PostTag(Name alias) {
        this(alias, POST_TAG);
    }

    private PostTag(Name alias, Table<PostTagRecord> aliased) {
        this(alias, aliased, null);
    }

    private PostTag(Name alias, Table<PostTagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FKAC1WDCHD2PNUR3FL225OBMLG0_INDEX_5, Indexes.FKC2AUETUVSEC0K566L0EYVR9CS_INDEX_5);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PostTagRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PostTagRecord, ?>>asList(Keys.FKC2AUETUVSEC0K566L0EYVR9CS, Keys.FKAC1WDCHD2PNUR3FL225OBMLG0);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostTag as(String alias) {
        return new PostTag(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PostTag as(Name alias) {
        return new PostTag(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PostTag rename(String name) {
        return new PostTag(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PostTag rename(Name name) {
        return new PostTag(name, null);
    }
}
